{"version":3,"sources":["src/const.ts","src/analytics/analytics-api.ts","src/analytics/analytics.ts","src/ab-test/const.ts","src/ab-test/local-storage.ts","src/ab-test/index.ts","src/index.ts","node_modules/parcel-bundler/src/builtins/bundle-url.js","node_modules/parcel-bundler/src/builtins/css-loader.js"],"names":["bundleURL","getBundleURLCached","getBundleURL","Error","err","matches","stack","match","getBaseURL","url","replace","exports","bundle","require","updateLink","link","newLink","cloneNode","onload","remove","href","split","Date","now","parentNode","insertBefore","nextSibling","cssTimeout","reloadCSS","setTimeout","links","document","querySelectorAll","i","length","module"],"mappings":"AOAA,ACAA,IDAIA,ACAAY,MAAM,GDAG,ACAAC,GDAG,IAAI,ACAA,CAAC,cAAc,CAAC;ADCpC,ACCA,SDDSZ,ACCAa,UAAU,CAACC,IAAI,EAAE,CDDC,GAAG;AND9B,EMEE,ACCA,IDDI,ACCAC,CDDChB,MCCM,GDDG,ACCAe,EDDE,ECCE,CAACE,SAAS,EAAE;EAC9BD,EDDEhB,KCCK,CAACkB,GDDG,GAAGhB,ACCA,GAAG,SDDS,EAAE,CCCC;EDA7B,ECCEa,IAAI,CAACI,MAAM,EAAE;AFLjB,ECME,ACAA,CAAC,IFNH,CAAA,CCMSnB,SAAS,IDNlB,CAAA;ACOA,AJPA,ACAA,AFAA,AFAa,AMCb,EEMEgB,ELPU,ACAZ,AFAA,AICA,EHIC,CHLY,CAAA,CQOJ,CAACI,CJPV,AECA,GEMc,AJPd,AECA,GEMiBL,ENPjB,CFAyB,CQOJ,AJPrB,AECA,CEMsBK,AJPtB,AFAA,AICA,CND4B,GQOF,CAACC,ENP3B,CAAA,CEAA,AECA,CEMgC,AJPhC,AECA,CEMiC,ARPK,CAAA,CAAC,CQOH,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CNP9C,CAAA,CMOiDC,IAAI,CAACC,GAAG,EAAE;ADE3D,AJTA,ACUA,AFRO,AFDM,AMCb,CHFA,CKQER,ENNW,AIAb,EEMM,CAACS,ARPM,CAAA,COQJtB,AHCA,EDVG,EAAE,CHCK,CGDL,AGEd,EEMiB,AJEA,AFRS,AFDJ,CQOJuB,AJEA,AERlB,EJA6B,AFDJ,COQJ,APRI,CISE,AJTD,EOQF,AHCG,CER3B,CAAA,GJAa,CMMiB,CAACT,OAAO,EAAED,ENNd,CAAI,CMMc,CAACW,INND,AIA5C,CAAA,CJA8C,GAAW,EMMD,ANNG,CMMF,UNNqB,EAA4B;AMO1G,ARPa,AMCb,ECOE,AJTA,ACUE,AFRF,ECFA,AGEF,CHFE,CDEM,CFDK,CAAA,KMCb,CJAgB,EIAhB,CJAmB,GCFjB,CAAA,EGEF,CHFE,AHC2B,AMC7B,EJAQ,CFDwB,KAAK,CAAA,CECrB,AFDsB,CGDT,AGE7B,CAAA;AEQA,ARPa,AMCb,ECME,AJTA,ACUE,EIDAC,ALTF,ADCc,CCDd,CISI,AHCG,CJRI,CAAA,GEDY,CAAA,CEST,AFTS,CMQX,CNRW,EMQR,AJCG,AJRE,CIQD,EAAE,AJRE,CQOJ,IJCO,CDV1B,CAAA,EHEgC,CGFhC,ADCuB,CAAA,EESW,IAAM,OAAO,AFTX,EAAC,CCDE,CCUY,CAAC,GAAG,KAAK,QAAS,EAAE,OAAO,KAAK;AIArF,AFLA,EHJE,ACUE,EGDA,AJTF,CAAA,CCUO,AFV+B,EAAE,CMSjCC,CDAC,ALTkC,GEU5B,CGDFzB,ALTkC,CAAC,EEU7B,CIDF,AJCG,AFV+B,CKSjC,CLTmC,CMSjC,CJCI,CDVvB,CAAA,GAAA,ACU4B,QAAQ,IAAM,EDVT,KCUgB,IAAI,CAAC,OAAO,KAAK,QAAS,EAAE,OAAO,KAAK;AHa3F,AKlBA,ECKE,ACAA,ALTA,ACUE,CGDD,CAAC,AJTF,CAAA,CKSIwB,AJCE,AFXgD,GAAG,EKUhDvB,ALV6C,EEWzC,CGDD,ALV6C,EKU3C,ACAA,CJCG,CIDD,AJCE,GDVlB,CAAA,ACUsB,GDVtB,ECU2B,QDVA,ACUQ,CDVR,CAAE,ACUQ,OAAO,KAAK;ADTnD,AFsBO,AKlBP,CHJC,CCUG,CDfQ,CIcR,ACAA,APaS,CE3BC,CDG+C,EKWrDC,AJdI,CCeD,CFZsD,EAAE,CEYpD,EGDA,AJdH,CAAA,CF2Bc,CMbR,AJdJ,ADG2D,CKWtD,CNaU,CMbR,EJdT,CIcYD,GAAG,CAACE,CNaf,CE3BD,CAAA,EIcqB,AJdnB,EIcqBC,CJdrB,CAAA,CAAA,CAAA,CIc0B,AJd1B,CIc2B,CNaf,CAAI,OAAwB,EAAU,oDMbwC,CAAC;AJPzG,ACSA,AENA,EEKE,APaE,EMbA,AJRQ,EAEX,AFmBS,ACzBiE,EKYnEF,INaQ,ACzBiE,EAAN,CKY5D,ANaY,EMbV,ENac,CAAC,SAAS,CAAC,OAAO,CAAC;AErBlD,ACWO,AELP,CHNA,CKUEsB,APYE,EGXS,AFfoE,CAAC,CKa5E,ALb6E,EEelE,CHWN,CAAC,CEtBA,ACWQ,CIDR,CDDCnB,AJTC,AFsBC,EOZAqB,ALVD,KCWD,GGFU,CAACxB,AHEP,CIDQ,AJCJ,CIDK,EJCM,EAAmB,CGFpB,CAAC,CAAC,CAAC,CAAC,GCCG,SPYI,MAAM,EAAG;AACnD,AKfA,CLeC,CEtBC,ACWA,AFhBiF,EKc/E,ACCA,ALVF,CAAA,CCWM,EIDAyB,CJCG,IIDE,ELVX,CKUcC,ALVd,GAAA,GCWe,EIDO,CAACC,IJCR,CAAA,CDXQ,CCWN,CAAC,QIDqB,AJCb,CIDc,aJCV,GAAG,CAAE,OID6B,CAAC;ALTnE,AFkBa,AKXb,CHPC,CISC,AHEE,AFhBF,CCGU,CKYR,AFHE,CHTQ,CCaJ,AFhBF,CDuBK,AKXJ,CHTG,AFoBC,CORJ,CFHW,GEGPC,AJCI,CIDH,ANfE,CCGJ,CAAA,ACaQ,AEJM,CEGT,ANfE,AIYQ,CEGT,ALZJ,EKYMA,CAAC,APQK,EEpBd,CKYYH,APQE,CKXS,CJZ3B,AIY4B,EFIJ,CIDH,AJCI,CIDHI,ALZlB,AGS4B,CHT5B,EAAE,CDHE,EMeoB,ALZtB,ACa0B,CDb1B,ACa2B,AHOf,CORYD,ALZxB,CKYyB,ALZzB,CAAA,ACa8B,CIDH,AJCI,EIDF;APa3C,AKdA,ECEE,AHCE,EFjBY,AIcV,EEEA,AJCE,CAAC,EGDA,CCACrB,AFFE,CJda,CKgBb,ALhBa,CAAA,AIcV,CFGC,AEHD,CJdU,AIcV,CEEC,AJCE,CIDDJ,AFFF,MFGU,IIDE,AJCE,CIDDsB,AFFb,CAAA,CJdU,CAAA,EMgBQ,CAACG,CAAC,CAAC,CAACb,IAAI,ANhBN,CMgBO,AFFd,CJdQ,CIcP,GEEkBR,IFFlB,CAAA,CEEwB,CAACV,IFFnB,EAAE,GAAG,EAAE,CEEwB,EAAE,EAAE,EFF5B,CAAA,YAAY,CAAC;ACGvD,ANYO,AKdP,CAAA,CFGI,AEHJ,ELca,AKdb,EFGQ,AFlB6B,EMiB7BY,ANjB+B,EEkBlB,AFlBoB,GIezC,CLcuB,AC7BsB,AIe7C,CJf8C,ED6BpB,COZR,ANjB+B,CMiB9BgB,CNjBgC,IMiB3B,AFFd,CEEeG,CAAC,APYb,AKdF,CEEgB,CAAC,QPYL,CAAI,OAAqB,EAAU;AMV1D,EHCI,AHUA,AKfQ,GAAG,CEGT,AJEE,AHUE,AC9B2C,CIezC,ECIHzB,ALnB+C,CIezC,CJfsC,CD8BrC,EC9BwC,CD8B7B,IMXR,ANWY,CMXXC,ANWY,GMXT,EAAE,INWgB,CAAC,OAAO,CAAC;EMVhD,ANWE,AKhBa,EEIb,AJEI,EFrBkD,EEqB9C,AENW,CCKd,ANWE,CMXD,ANWE,AC/BkD,AIe7C,CFMF,CGDH,ALpBoD,CD+BjD,EMXAA,AHCI,CAAC,CENH,CCKC,ADLD,CJfsD,CKoBnDC,CHCK,CAAC,EENH,GCKI,CAAC,CHCK,CAAC,cHUK,MAAM,EAAG,wDMX4D,EAAE,IAAI,CAAC,GAAG,GAAG;AACzH,ANWA,CAAC,CKjBwB,CFOpB,CIDDiB,AJCE,EFtBmE,KEsBnE,CFtByE,CEsBzE,CIDQ,ANrB2D,CEsB7D,EIDK,CFNwB,EAAhB,CEMJ,MFNI,CAAA;ACQzBhB,ANMa,AKd4B,CAAC,CEOxC,CAAC,AFPyC,CFQpC,AFvBuE,CMsB1E,ANtB2E,CAAC,CKuB1E,ACDA,APOM,CMNLT,ACDA,APOK,CKdqC,CAAC,CFQpC,CAAC,GAAG,CAAC,EHMG,EMNH,CNMG,EMNAD,QNMA,GGNe,CAAC,CAAA,CAAC,IGAC;AACzCU,ACDA,APWO,AKdP,EJpBiF,EEwBzE,AHUK,CGVL,CAAA,CGAD,CAACH,AHAA,OAAA,CAAA,EGAU,ANUS,GMVNA,ANUS,CGVhB,EAAC,GAAG,CAAC,EHUN,CMVkB,aNUJ,CAAI,OAAoB,EAAU;AOT7D2B,AFJA,ELcE,AClCA,EEwBM,EIAF,APUE,AClCA,CMwBDxB,IJAQ,CHUD,EOVA,CJAK,AHUM,CClCP,CMwBDiB,EPUY,AClCR,CDkCS,MOVJ,ENxBlB,CDkC+B,CAAC,OAAO,CAAC,AClC9B,GAAQ;AIqB1B,ELcE,EClCE,KDkCK,CAAC,AClCA,CAAC,EDkCE,iBClCiB,CAAC,MAAM,EAAE,QAAQ,CAAC,CDkCN,MAAM,EAAG;AACnD,CAAC,CGTG,EFzBA,EEyBI,IFzBE,CAAC,GEyBK,CAAC,IAAI,CAAC,EAAE,OAAO,CFzBD,CAAC,EEyBI,KFzBG,EAAE,QAAQ,CAAC;AD+BpC,EGLT,EFzBA,GD8BS,CAAA,CGLF,CFzBD,CAAC,EEyBI,SHKY,GAAA,KC9BG,CAAC,QD8BJ,MC9BkB,EAAE,UAAU,CAAC;AE0B1D,CAAC,GFxBG,CAAA,CAAA,EAAA,eAAA,CAAA,aAAa,EAAC;AEQL,MFRM,CEQN,CAAA,AFRQ,EAAE,EEQN,EFRU,CEQV,AFRW,GAAG,CEQd,CFRgB;AE0B1B,IAAM,EF1BsB,GE0BjB,AF1BoB,EAAH,CE0Bd,EF1BiB,OE0BzB,KAAK,CAAI,MAAc,EAAU;EAC1C,IF3BoC,IAAI,EAAE,EE2B9B,CAAC,KF3BqC,EE2B9B,WAAI,OAAA,CAAA,EAAE,CAAC,QAAQ,cAAI,MAAM,CAAC,GAAG,GAAI,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;AAChF,CAAC,KF5BuD,MAAM,EAAN;AE0B3C,IF1BiD,CAAC,CAAC,CE0BnD,CAAA,KAAK,GAAA,KAAA;AAIX,EF7BL,CAAC,CE6BU,MAAM,GAAG,SAAT,MAAM,CAAI,GAAW,EAAU;EAC1C,AF5BA,IE4BM,EF5BA,CE4BG,AF5BF,aE4BQ,GF5BQ,CAAC,GE4BT,CAAA,EAAE,AF5Ba,CE4BZ,CF5Bc,OE4BN,CF5Bc,CAAC,YE4BX,GAAG,CAAE;EACnC,AF3BA,IAAM,QE2BM,CAAC,AF3BE,GAAG,OE2BK,CAAC,AF3BE,CAAC,EE2BA,CAAC,UF3BY,YAAK,WAAW,OAAI;AE4B9D,CAAC,CF3BC,IAAI,SAAS,EAAE,SAAS,CAAC,gBAAgB,CAAC,OAAO,EAAE,QAAQ,CAAC;AEwBjD,EFtBX,KEsBW,CAAA,AFtBL,CAAC,KEsBU,GAAA,MAAA,EFtBM,CAAC,cAAc,EAAE,UAAU,CAAC;EAEnD,OAAO,UAAC,IAAY;IAAA,OAAK,CAAA,CAAA,EAAA,eAAA,CAAA,cAAc,EAAC;MAAC,EAAE,EAAE,IAAI,CAAC,GAAG,EAAE;AGpBzD,IAAA,EHoB2D,GAAG,EGpB9D,AHoB2D,GGpB3D,AHoB8D,OGpB9D,CAAA,SAAA,CAAA;AACA,IAAA,EHmBgE,MAAM,EAAN,KGnBhE,CHmBsE,EGnBtE,OAAA,CAAA,iBAAA,CAAA;AACA,IAAA,EHkBwE,IAAI,CGlB5E,CHkBwE,EGlBxE,OAAA,CAAA,UAAA,CAAA;AAQA,IAAM,AHUsE,CAAC,CAAC,oBGVlD,GAAG,SAAzB,sBAAsB,CAAI,cAAsB,EAAa;EAC/D,AHS0E,IGTpE,IAAI,GAAG,IAAI,IAAI,CAAC,cAAc,CAAC;AHUzC,CAAC,CGRG,IAAI,IAAI,CAAC,QAAQ,EAAE,KAAK,cAAc,EAAE,OAAO,KAAK;AHX3C,EGYT,IAAI,CHZK,CAAA,EGYD,CAAC,OAAO,EAAE,CHZI,GGYA,AHZA,IGYI,CAAC,GAAG,EAAE,EAAE,CHZZ,MGYmB,KAAK;EAE9C,OAAO,IAAI;AACf,CAAC;AAED,IAAM,UAAU,GAAG,SAAb,UAAU,GAAQ;EACpB,IAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,SAAS,CAAC;EAChD,MAAM,KAAA,IAAA,IAAN,MAAM,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAN,MAAM,CAAE,MAAM,EAAE;AACpB,CAAC;AAED,IAAM,UAAU,GAAG,SAAb,UAAU;EAAA,OAAc,SAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,0CAAA;IAAA;IAAA;MAAA;QAAA;UACpB,cAAc,GAAG,QAAQ,CAAC,gBAAgB,YAAK,OAAA,CAAA,EAAE,CAAC,cAAc,OAAI;UAAA,MACtE,cAAc,CAAC,MAAM,KAAK,CAAC;YAAA;YAAA;UAAA;UAAA;QAAA;UAEzB,KAAK,GAAQ,EAAE;UAGrB,cAAc,CAAC,OAAO,CAAC,UAAA,EAAE,EAAG;YACxB,IAAM,GAAG,GAAG,EAAsB;YAClC,IAAM,GAAG,GAAG,GAAG,CAAC,YAAY,CAAC,OAAA,CAAA,EAAE,CAAC,cAAc,CAAC;YAE/C,IAAI,kBAAyB,YAAY,EAAE;cACvC,GAAG,IAAI,GAAG,CAAC,YAAY,CAAC,KAAK,EAAE,OAAA,CAAA,SAAS,GAAG,GAAG,CAAC;aAClD,MAAM;cACH,GAAG,IAAI,GAAG,CAAC,YAAY,CAAC,KAAK,EAAE,GAAG,CAAC;;YAIvC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC;UAC5B,CAAC,CAAC;UAAA;UAEF,OAAM,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA,CAC3B,EAAA;AAAA;AAGM,IAAM,UAAU,GAAG,SAAb,UAAU,CAAU,MAAkB,EAAE,GAA+B;EAAA,OAAmB,SAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,0CAAA;IAAA;IAAA;MAAA;QAAA;UAC7F,iBAAiB,GAAG,SAApB,iBAAiB,CAAI,QAAmB;YAAA,OAAK,UAAC,IAAa,EAAU;cACvE,IAAI,YAAY,GAAG,CAAC;cACpB,IAAI,IAAI,EAAE;gBACN,YAAY,GAAG,QAAQ,CAAC,SAAS,CAAC,UAAA,IAAI;kBAAA,OAAI,IAAI,CAAC,YAAY,CAAC,OAAA,CAAA,EAAE,CAAC,gBAAgB,CAAC,KAAK,IAAI;gBAAA,EAAC;;cAE9F,IAAI,YAAY,GAAG,CAAC,EAAE;gBAClB,GAAG,KAAA,IAAA,IAAH,GAAG,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAH,GAAG,CAAG,qCAAqC,CAAC;gBAC5C,YAAY,GAAG,CAAC,CAAC,CAAC;;;cAEtB,6BAAI,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,YAAY,CAAC,sBAAK,QAAQ,CAAC,KAAK,CAAC,YAAY,GAAG,CAAC,CAAC,GAAE,OAAO,CAAC,UAAA,IAAI;gBAAA,OAAI,IAAI,CAAC,MAAM,EAAE;cAAA,EAAC;YAC5G,CAAC;UAAA;UAEK,MAAM,GAAG,QAAQ,CAAC,aAAa,YAAK,OAAA,CAAA,EAAE,CAAC,aAAa,OAAI;UAAA,IACzD,MAAM;YAAA;YAAA;UAAA;UAAA;UACP,OAAM,UAAU,EAAE;QAAA;UAClB,UAAU,EAAE;UAAA;QAAA;UAGV,QAAQ,GAAG,MAAM,CAAC,YAAY,CAAC,OAAA,CAAA,EAAE,CAAC,aAAa,CAAC;UAEhD,WAAW,GAAG,SAAd,WAAW,CAAU,IAAa;YAAA,OAAI,SAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,0CAAA;cAAA;gBAAA;kBAAA;oBACxC,GAAG,KAAA,IAAA,IAAH,GAAG,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAH,GAAG,0BAAqB,QAAQ,wBAAc,IAAI,EAAG;oBACrD,iBAAiB,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC;oBAAA;oBACjD,OAAM,UAAU,EAAE;kBAAA;oBAClB,UAAU,EAAE;kBAAA;kBAAA;oBAAA;gBAAA;cAAA;YAAA,CACf,EAAA;UAAA;UAEK,YAAY,GAAG,MAAM,CAAC,gBAAgB,YAAK,OAAA,CAAA,EAAE,CAAC,gBAAgB,OAAI;UAAA,MACpE,YAAY,CAAC,MAAM,GAAG,CAAC;YAAA;YAAA;UAAA;UACvB,GAAG,KAAA,IAAA,IAAH,GAAG,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAH,GAAG,CAAG,+BAA+B,CAAC;UACtC,CAAA,CAAA,EAAA,eAAA,CAAA,MAAM,EAAC,MAAM,CAAC,GAAG,CAAC;UAClB,WAAW,EAAE;UAAA;QAAA;UAAA,IAKZ,QAAQ;YAAA;YAAA;UAAA;UACT,GAAG,KAAA,IAAA,IAAH,GAAG,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAH,GAAG,CAAG,uBAAuB,CAAC;UAC9B,CAAA,CAAA,EAAA,eAAA,CAAA,MAAM,EAAC,MAAM,CAAC,GAAG,CAAC;UAClB,WAAW,EAAE;UAAA;QAAA;UAKX,cAAc,GAAG,MAAM,CAAC,YAAY,CAAC,OAAA,CAAA,EAAE,CAAC,mBAAmB,CAAC;UAAA,IAC7D,cAAc;YAAA;YAAA;UAAA;UACf,GAAG,KAAA,IAAA,IAAH,GAAG,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAH,GAAG,CAAG,6BAA6B,CAAC;UACpC,CAAA,CAAA,EAAA,eAAA,CAAA,MAAM,EAAC,MAAM,CAAC,GAAG,CAAC;UAClB,WAAW,EAAE;UAAA;QAAA;UAAA,IAGZ,sBAAsB,CAAC,cAAc,CAAC;YAAA;YAAA;UAAA;UACvC,GAAG,KAAA,IAAA,IAAH,GAAG,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAH,GAAG,CAAG,gCAAgC,CAAC;UACvC,CAAA,CAAA,EAAA,eAAA,CAAA,MAAM,EAAC,MAAM,CAAC,GAAG,CAAC;UAClB,WAAW,EAAE;UAAA;QAAA;UAAA,KAIb,MAAM,CAAC,gBAAgB;YAAA;YAAA;UAAA;UACvB,WAAW,EAAE;UAAA;QAAA;UAEhB;UAED;UACM,aAAa,GAAG,SAAhB,aAAa,CAAI,IAAY,EAAmB;YAClD,IAAM,gBAAgB,GAAG,SAAnB,gBAAgB,CAAI,IAAY,EAAE,EAAU,EAAa;cAC3D,IAAI,IAAI,CAAC,IAAI,KAAK,EAAE,CAAC,IAAI,EAAE,OAAO,KAAK;cACvC,IAAI,IAAI,CAAC,UAAU,KAAK,EAAE,CAAC,UAAU,EAAE,OAAO,KAAK;cACnD,IAAI,IAAI,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,EAAE,OAAO,KAAK;cACrC,OAAO,IAAI;YACf,CAAC;YAED,IAAM,SAAS,GAAG,CAAA,CAAA,EAAA,eAAA,CAAA,IAAI,EAAC,MAAM,CAAC,GAAG,CAAC;YAClC,IAAI,CAAC,SAAS,EAAE;YAChB,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,SAAS,CAAC,EAAE;cACpC,GAAG,KAAA,IAAA,IAAH,GAAG,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAH,GAAG,CAAG,wBAAwB,CAAC;cAC/B;;YAGJ,OAAO,SAAS,CAAC,OAAO;UAC5B,CAAC;UAEK,IAAI,GAAW;YACjB,EAAE,YAAK,IAAI,CAAC,GAAG,EAAE,CAAE;YACnB,OAAO,EAAE,GAAG;YACZ,IAAI,EAAE,QAAQ;YACd,GAAG,EAAE,MAAM,CAAC,GAAG;YACf,UAAU,EAAE;WACf;UACK,aAAa,GAAG,aAAa,CAAC,IAAI,CAAC;UAAA,KACrC,aAAa;YAAA;YAAA;UAAA;UACb,WAAW,CAAC,aAAa,CAAC;UAAA;QAAA;UAI9B;UACM,gBAAgB,GAAW,YAAY,CAAC,MAAM;UAC9C,aAAa,GAAW,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,gBAAgB,CAAC;UACpE,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,aAAa,CAAC,CAAC,YAAY,CAAC,OAAA,CAAA,EAAE,CAAC,gBAAgB,CAAC;UAAA,IAEvF,UAAU;YAAA;YAAA;UAAA;UACX,GAAG,KAAA,IAAA,IAAH,GAAG,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAH,GAAG,CAAG,6CAA6C,CAAC;UACpD,WAAW,EAAE;UAAA;QAAA;UAIjB,CAAA,CAAA,EAAA,eAAA,CAAA,KAAK,EAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EACE,IAAI,CAAA,EAAA;YACP,OAAO,EAAE;UAAU,CAAA,CAAA,CACrB;UACF,WAAW,CAAC,UAAU,CAAC;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA,CAC1B,EAAA;AAAA;AAhHY,OAAA,CAAA,UAAU,GAAA,UAAA","file":"src.f10117fe.js","sourceRoot":"..","sourcesContent":["export const CTA_SELECTOR = 'data-cta' // for the button\nexport const userId = '1' // for the test reason id is here as a const\nexport const isRegisteredUser = false // We need only unregistered users\n\nexport const publicURL = '/abtest'","/**\n * Tracks a pageview to our \"imaginary api\" - in this demo just the browser console. ;)\n * Send as params whatever you might seem valuable to send.\n * The URL is probably a good start though.\n */\n\n\n// here we will send other data from navigator\ntype Payload = {\n  userId: string,\n  ts: number,\n  url: string,\n}\n\ntype PageViewPayload  = Payload & {\n    type: 'load' | 'unload'\n}\n\ntype EventPayload = Payload & {\n    type: 'click'\n}\n\ntype CodePayload = Payload & {\n  data: string\n}\n\n// send page events like open, close, scroll\nexport const trackPageview = (payload: PageViewPayload): void => {\n    const parsed: String = JSON.stringify(payload)\n    console.log(`--> Tracking Pageview: ${parsed}`);\n};\n\n// sent user events like press, click\nexport const trackEvent = (payload: EventPayload): void => {\n    const parsed: String = JSON.stringify(payload)\n    console.log(`--> Tracking Event: ${parsed}`);\n};\n\nexport const trackCodeEvent = (payload: CodePayload): void => {\n  const parsed: String = JSON.stringify(payload)\n  console.log(`--> Tracking code event: ${parsed}`);\n};","import {trackPageview, trackEvent, trackCodeEvent} from \"./analytics-api\";\n\nexport const initAnalytics = (userId: string, url: string, ctaSelector: string): (data: string) => void => {\n  const loadPage = () => trackPageview({ts: Date.now(), url, type: 'load', userId})\n  const clickCta = () => trackEvent({ts: Date.now(), url, type: 'click', userId})\n  const unloadPage = () => {\n    window.removeEventListener('load', loadPage)\n    window.removeEventListener('click', clickCta)\n    window.removeEventListener('beforeunload', unloadPage)\n\n    trackPageview({ts: Date.now(), url, type: 'unload', userId})\n  }\n\n  window.addEventListener('load', loadPage)\n\n  const ctaButton = document.querySelector(`[${ctaSelector}]`)\n  if (ctaButton) ctaButton.addEventListener('click', clickCta)\n\n  window.addEventListener('beforeunload', unloadPage)\n\n  return (data: string) => trackCodeEvent({ts: Date.now(), url, userId, data})\n}","export enum AB {\n  SELECTOR_NAME = 'data-test',  // main selector of the test. Only one per document\n  SELECTOR_EXPIRATION = 'data-expiration',  // date of test expiration\n  SELECTOR_VARIANT = 'data-variant',  // test variant letter\n  SELECTOR_IMAGE = 'data-src'  // for image optimization\n}\n\nexport enum LS {\n  KEY_NAME = 'APP_ABTEST'\n}","import {LS} from \"./const\";\n\nexport type LStest = {\n    ts: string,\n    url: string,\n    name: string\n    variant: string,\n    expiration: string,\n}\n\nfunction isLStest(item: any): item is LStest {\n    // explicit properties\n    if ((typeof item.ts !== 'string') && (typeof item.url !== 'string')) return false\n    if ((typeof item.name !== 'string') && (typeof item.variant !== 'string')) return false\n    if (typeof item.name !== 'string') return false\n    return true\n}\n\nexport const read = (url: string): LStest | null => {\n  const key = `${LS.KEY_NAME}_${url}`\n    const rawItem = localStorage.getItem(key)\n    if (!rawItem) return null\n    let item: unknown\n\n    try {\n        item = JSON.parse(rawItem)\n    } catch {\n        console.log('LS parsing error') // Not real log\n        remove(url)\n        return null\n    }\n\n    if (isLStest(item)) return item\n    return null\n}\n\nexport const write = (params: LStest): void => {\n    localStorage.setItem(`${LS.KEY_NAME}_${params.url}`, JSON.stringify(params))\n}\n\nexport const remove = (url: string): void => {\n  const key = `${LS.KEY_NAME}_${url}`\n  localStorage.removeItem(key)\n}","import {AB} from \"./const\";\nimport {LStest, read, remove, write} from \"./local-storage\";\nimport {publicURL} from \"../const\";\n\ntype InitParams = {\n    userId: string,\n    isRegisteredUser: boolean,\n    url: string\n}\n\nconst validateExpirationDate = (expirationDate: string): boolean => {\n    const date = new Date(expirationDate)\n\n    if (date.toString() === 'Invalid date') return false\n    if (date.getTime() <= Date.now()) return false\n\n    return true\n}\n\nconst hideLoader = () => {\n    const loader = document.querySelector('.loader')\n    loader?.remove()\n}\n\nconst loadimages = async () => {\n    const unloadedImages = document.querySelectorAll(`[${AB.SELECTOR_IMAGE}]`)\n    if (unloadedImages.length === 0) return\n\n    const array = <any>[]\n\n\n    unloadedImages.forEach(el => {\n        const img = el as HTMLImageElement\n        const src = img.getAttribute(AB.SELECTOR_IMAGE)\n\n        if (process.env.NODE_ENV === 'production') {\n            src && img.setAttribute('src', publicURL + src)\n        } else {\n            src && img.setAttribute('src', src)\n        }\n\n\n        array.push(img.decode())\n    })\n\n    await Promise.all(array)\n}\n\n\nexport const initABTest = async (params: InitParams, log?: (payload: string) => void): Promise<void> => {\n    const hideOtherVariants = (variants: Element[]) => (name?: string): void => {\n        let variantIndex = 0;\n        if (name) {\n            variantIndex = variants.findIndex(node => node.getAttribute(AB.SELECTOR_VARIANT) === name);\n        }\n        if (variantIndex < 0) {\n            log?.('AB test, can not find saved variant')\n            variantIndex = 0; // show default\n        }\n        [...variants.slice(0, variantIndex), ...variants.slice(variantIndex + 1)].forEach(node => node.remove())\n    }\n\n    const testEl = document.querySelector(`[${AB.SELECTOR_NAME}]`)\n    if (!testEl) {\n        await loadimages()\n        hideLoader()\n        return // no test, show as is, OK\n    }\n    const testName = testEl.getAttribute(AB.SELECTOR_NAME)\n\n    const showVariant = async (name?: string) => {\n        log?.(`AB test, name: ${testName}, variant: ${name}`)\n        hideOtherVariants(Array.from(testVariants))(name)\n        await loadimages()\n        hideLoader()\n    }\n\n    const testVariants = testEl.querySelectorAll(`[${AB.SELECTOR_VARIANT}]`)\n    if (testVariants.length < 2) {\n        log?.('AB test, less then 2 variants')\n        remove(params.url)\n        showVariant()\n        return\n    } // log ERROR, show as is\n\n    // Further we have two+ variants\n    if (!testName) {\n        log?.('AB test, no test name')\n        remove(params.url)\n        showVariant()\n        return\n    }\n\n\n    const expirationDate = testEl.getAttribute(AB.SELECTOR_EXPIRATION)\n    if (!expirationDate) {\n        log?.('AB test, no expiration date')\n        remove(params.url)\n        showVariant()\n        return\n    }// log error, select first variant (control)\n    if (!validateExpirationDate(expirationDate)) {\n        log?.('AB test, wrong expiration date')\n        remove(params.url)\n        showVariant()\n        return\n    }\n\n    if (params.isRegisteredUser) {\n        showVariant()\n        return\n    }// select first variant (control)\n\n    // check LS\n    const variantFromLS = (test: LStest): string | void => {\n        const compareTestAndLS = (test: LStest, ls: LStest): boolean => {\n            if (test.name !== ls.name) return false\n            if (test.expiration !== ls.expiration) return false\n            if (test.url !== ls.url) return false\n            return true\n        }\n\n        const lsVariant = read(params.url)\n        if (!lsVariant) return\n        if (!compareTestAndLS(test, lsVariant)) {\n            log?.('AB test, wrong LS data')\n            return\n        }\n\n        return lsVariant.variant\n    }\n\n    const test: LStest = {\n        ts: `${Date.now()}`,\n        variant: 'A',\n        name: testName,\n        url: params.url,\n        expiration: expirationDate\n    }\n    const LStestVariant = variantFromLS(test)\n    if (LStestVariant) {\n        showVariant(LStestVariant)\n        return\n    }\n\n    // randomly assign a variant, show it\n    const numberOfVariants: number = testVariants.length\n    const randomVariant: number = Math.floor(Math.random() * numberOfVariants);\n    const randomName = Array.from(testVariants)[randomVariant].getAttribute(AB.SELECTOR_VARIANT)\n\n    if (!randomName) {\n        log?.('AB test, can not define random variant name')\n        showVariant()\n        return\n    }\n\n    write({\n        ...test,\n        variant: randomName,\n    })\n    showVariant(randomName)\n}\n","import \"./styles.css\";\nimport {CTA_SELECTOR, userId, isRegisteredUser} from \"./const\";\nimport {initAnalytics} from \"./analytics/analytics\";\nimport {initABTest} from \"./ab-test\"\n\n// Your code here\n\n// Parse HTML for test info\n// Parse cookies\n// Compare cookies and HTML\n// Apply final variant changes to HTML\n\n\n// TODO\n\n// Add analytics tracker\nconst url: string = window.location.href\n\nconst logger = initAnalytics(userId, url, CTA_SELECTOR)\ninitABTest({url, userId, isRegisteredUser}, logger)\n\n\n\n\n// Work with HTML service\n// Work with cookie service\n// Log errors servise","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)?\\/[^/]+(?:\\?.*)?$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n"]}